//*-- AUTHOR : Ilse Koenig
//*-- Modified : 11/09/2000

/////////////////////////////////////////////////////////////
// HDbConn
//
// Oracle connection class (used for Oracle utility programs)
// (uses the Oracle C/C++ precompiler)
//
/////////////////////////////////////////////////////////////

#include "hdbconn.h"
#include <stdio.h>
#include <iostream.h>

// Oracle communication area
#include <oraca.h>
// SQL Communications Area
#include <sqlca.h>
 
ClassImp(HDbConn)

HDbConn::HDbConn() {
  // Default constructor (Connection not yet open)
  dbIsOpen=kFALSE;
  noDDL=kTRUE;
}

HDbConn::~HDbConn() {
  // Destructor
  closeDbConn();
}

Bool_t HDbConn::connectDb(TString userName, TString dbName) {
  // Opens an Oracle connection (e.g.with:  "hades","db-hades")
  // Asks for a password.
  uName=userName;
  uName.ToUpper();
  if (uName.CompareTo("SCOTT")==0) {
    cout<<"User SCOTT is not allowed to use this program!"<<endl;
    return kFALSE;
  }
  if (uName.CompareTo("HADES")==0) cout<<"User HADES has readonly access!"<<endl;
  else noDDL=kFALSE;
  TString connString=uName+"@"+dbName;
  char* password = new char[9];
  cout<<"enter password for user "<<uName<<" > ";
  cin>>password;

  if (dbIsOpen) closeDbConn();

  EXEC SQL BEGIN DECLARE SECTION;
    char* uN;
    char* pW;
  EXEC SQL END DECLARE SECTION;

  uN=(char*)connString.Data();
  pW=password;

  EXEC SQL WHENEVER SQLERROR DO
    showSqlError("ORACLE error in HDbConn::openConnection(...):");

  EXEC SQL CONNECT :uN IDENTIFIED BY :pW;

  if (sqlca.sqlcode==0) {
    dbIsOpen=kTRUE;
    cout<<"Connected to Oracle database"<<endl;
  }
  else cout<<"*** Failed to connect to Oracle ***"<<endl;
  delete password;
  
  return dbIsOpen;
}   
 
void HDbConn::closeDbConn() {  
  // Disconnects from ORACLE
  // A transaction will be automatically rolled back, that means,
  // changes in the database are not stored without an explicit COMMIT before
  EXEC SQL WHENEVER SQLERROR DO
    showSqlError("ORACLE error in HDbConn::closeDbConn():");
  if (dbIsOpen) {
    EXEC SQL ROLLBACK RELEASE;
    dbIsOpen=kFALSE;
    cout<<"connection to Oracle closed"<<endl;
  }
}

void HDbConn::showSqlError(const char* f) {
  // shows SQL error messages
  Error(f,"\n%s",sqlca.sqlerrm.sqlerrmc);
}
  