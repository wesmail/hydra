This directory contains the following ROOT macros:

1. README (this file)
2. makeRichParams.C
3. makeBetaParams.C
4. makeShowerParams.C
5. makeHardCutPidParams.C
6. updateHardCutPidParams.C

General Remark: 
To understand the output format of the parameters please look into HPidHistogramsCont class (pid/ module)!  
The makeRichParams.C macro is a compiling macro (.x makeRichParams.C+) which is used to make 
the Rich ring parameters for the hard cut lepton id. The ring is described by 4 parameters:
PM - patern matrix amplitude
RC- ring centroid
NP - number of pads per ring
AC - average charge allocated in the ring

At the moment the standard values used for NOV02 analysis are set in the macro.

The makeBetaParams.C macro is a compiling macro (.x makeBetaParams.C+) which is used to make 
the beta vs. momentum windows for the hard cut lepton id.

The makeShowerParams.C macro is a compiling macro (.x makeShowerParams.C+) which is used to make 
the F10 vs momentum, F20 vs momentum, maxF vs momentum, sumDiff vs momentum and sum0 vs momentum parameters for the hard cut lepton id. The F10=(sum1/sum0), F20=(sum2/sum0) and maxF=(sum1/sum0, sum2/sum0) and sumDiff=(sum1+sum2-sum0) where sum0, sum1, sum2 is a sum of charge induced in the pre, post1 and post2 Pre-Shower chambers, respectively.

The makeHardCutPidParams.C is the interpreted macro which is used to merge Rich/Beta/Shower
parameters and stores them in the HPidAlgStandCutsPar container with a given runID.

The updateHardCutPidParams.C is the interpreted macro which is used to update/modify the Rich/Beta/Shower PID parameters stored in the HPidAlgStandCutsPar. The modified HPidAlgStandCutsPar container is stored in the new output file.

Remark: 
All parameters are done pidwise (2,3 - particleID in Geant) and sectorwise (0,1,...5). Please look into themacros for details.

Quick Start:

Set ROOT and HYDRA enviroment

A. Rich parameters generation
1. Open file with histograms
   root -l histo.root 
2. Look at pRichPM[MAX_ALG][6], pRichRC[MAX_ALG][6], pRichNP[MAX_ALG][6], pRichAC[MAX_ALG][6] histograms to estimate the thresholds. The MAX_ALG is the number of momentum reconstruction algorithms. 
3. Edit makeRichParams.C 
 - set proper PM, RC, NP, and AC thresholds
 - set proper context = "sim" or "exp"
 - set proper output file name
4. Run macro
   root> .x makeRichParams.C+
  or 
   root -l makeRichParams.C+

Remark: Rich parameters should not depend from momentum recostruction algorithm. So the kick plane algorithm is recommended.

B. Beta vs momentum windows

1. Edit makeBetaParams.C
  - select momentum reconstruction algorithm (#define MOM_ALG 0) 
  - set the beta lower and upper limit for the fit  
  - set proper context = "sim" or "exp"
  - set input histogram file
  - set which momentum step (MOM_STEP[]= {0,300,600})
  - set the beta window (how many sigmas;  SIGMA_FACT=3.0)  
2. Run macro
   root> .x makeBetaParams.C+
  or 
   root makeBetaParams.C+

C. Shower conditions

1. Edit makeShowerParams.C
  - select momentum reconstruction algorithm (#define MOM_ALG 0) 
  - set the beta lower and upper limit for the fit  
  - set proper context = "sim" or "exp"
  - set input histogram file
  - set which momentum step (MOM_STEP[]= {0,300,600})
  - change if needed the confidence levels CL of F10,  F20, maxF, sum0
2. Run macro
   root> .x makeShowerParams.C+
  or 
   root -l makeShowerParams.C+
   
D. Make Hard Cut Parameters

1. Edit makeHardCutPidParams.C
  - set proper context = "sim" or "exp"
  - change input Rich/Beta/Shower parameter files 
  - change output file
2. Run macro
   root> .x makeHardCutPidParams.C
  or 
   root -l makeHardCutPidParams.C 

E. Update/modify Hard Cut Parameters

1. Edit updateHardCutPidParams.C
  - set input and output file
  - set runID
  - write modification code 
2. Run macro
   root> .x updateHardCutPidParams.C
  or 
   root -l updateHardCutPidParams.C 
