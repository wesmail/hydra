//*-- Author : Dan Magestro (magestro@gsi.de)
//*-- Modified : 24/01/2002
//*-- Modified : 20/01/2004 Jacek Otwinowski
//*-- Modified : 20/01/2004 A.Sadovski
//*-- Modified : 04/01/2005 Jacek Otwinowski 
//*-- Modified : 08/02/2005 A.Sadovski
//*-- Modified : 26/11/2007 A.Sadovsky, M.Golubeva, T.Solovieva
//
//  QAhists.h
//
//  List of general histograms to be printed by HQAOutputPS.
//
//  Note: If this file is changed, hqahistograms.cc needs
//        to be recompiled

  // Active Start histograms
   //"stCal_tof",

   "stHit_vs_stStrip", 
   "stHit_tof_vs_startstripe",
   "stLatchHist",
   "stCal_strip",
   "stHit_vs_stStrip_Trigg[0]",
   "stHit_vs_stStrip_Trigg[1]",
   "stHit_vs_stStrip_Trigg[2]",
   "stHit_vs_stStrip_Trigg[3]",
   "stHit_vs_stStrip_Trigg[4]",
   "stHit_vs_stStrip_Trigg[5]",
   "stHit_vs_stStrip_Trigg[6]",
   "stHit_vs_stStrip_Trigg[7]",
   "stHit_vs_stStrip_Trigg[8]",
   "stVertexXY",
   "stVertexZ",

  // Active DAQ Scaler histiograms
   "histInput[0]",
   "histInput[1]",
   "histInput[2]",
   "histInput[3]",
   "histInput[4]",
   "histInput[5]",
   "histInput[6]",
   "histInput[7]",
   "histReduce[0]",
   "histReduce[1]",
   "histReduce[2]",
   "histReduce[3]",
   "histReduce[4]",
   "histReduce[5]",
   "histReduce[6]",
   "histReduce[7]",
   "histStartScaler[0]",
   "histStartScaler[1]",
   "histStartScaler[2]",
   "histStartScaler[3]",
   "histStartScaler[4]",
   "histStartScaler[5]",
   "histStartScaler[6]",
   "histStartScaler[7]",
   "histVetoScaler[0]",
   "histVetoScaler[1]",
   "histVetoScaler[2]",
   "histVetoScaler[3]",
   "histVetoScaler[4]",
   "histVetoScaler[5]",
   "histVetoScaler[6]",
   "histVetoScaler[7]",


  // Active Rich histograms
   "richCal_row",
   "richCal_column",
   "richHit_scat",
   "richHit_phi",
   "richHit_theta",
   "richHit_radius",
   "richHit_centroid",
   "richHit_chargeAmpl",
   "richHit_ringCol",
   "richHit_ringRow",
   "richHit_ringLocMax4",
   "richHit_houTraVsPatMat",
   "richHit_patMatVsTheta",
   "richHit_houTraVsTheta",
   "richHit_chargeAmplVsTheta",
   "richHit_radiusVsTheta",

  // Active Mdc histograms
   //"mdcRaw_mboVsSector_m0",
   //"mdcRaw_mboVsSector_m1",
   //"mdcRaw_mboVsSector_m2",
   //"mdcRaw_mboVsSector_m3",
   //"mdcCal1_time1VsSector_m0",
   //"mdcCal1_time1VsSector_m1",
   //"mdcCal1_time1VsSector_m2",
   //"mdcCal1_time1VsSector_m3",
   //"mdcCal1_nVsSector_m0",
   //"mdcCal1_nVsSector_m1",
   //"mdcCal1_nVsSector_m2",
   //"mdcCal1_nVsSector_m3",
   //"mdcCal1_t2mt1_vs_t1[0][0]",
   //"mdcCal1_t2mt1_vs_t1[1][0]",
   //"mdcCal1_t2mt1_vs_t1[2][0]",
   //"mdcCal1_t2mt1_vs_t1[3][0]",
   //"mdcCal1_t2mt1_vs_t1[4][0]",
   //"mdcCal1_t2mt1_vs_t1[5][0]",
   //"mdcCal1_t2mt1_vs_t1[0][1]",
   //"mdcCal1_t2mt1_vs_t1[1][1]",
   //"mdcCal1_t2mt1_vs_t1[2][1]",
   //"mdcCal1_t2mt1_vs_t1[3][1]",
   //"mdcCal1_t2mt1_vs_t1[4][1]",
   //"mdcCal1_t2mt1_vs_t1[5][1]",
   //"mdcCal1_t2mt1_vs_t1[0][2]",
   //"mdcCal1_t2mt1_vs_t1[1][2]",
   //"mdcCal1_t2mt1_vs_t1[2][2]",
   //"mdcCal1_t2mt1_vs_t1[3][2]",
   //"mdcCal1_t2mt1_vs_t1[4][2]",
   //"mdcCal1_t2mt1_vs_t1[5][2]",
   //"mdcCal1_t2mt1_vs_t1[0][3]",
   //"mdcCal1_t2mt1_vs_t1[1][3]",
   //"mdcCal1_t2mt1_vs_t1[2][3]",
   //"mdcCal1_t2mt1_vs_t1[3][3]",
   //"mdcCal1_t2mt1_vs_t1[4][3]",
   //"mdcCal1_t2mt1_vs_t1[5][3]",
   "mdcCal1_t2mt1[0][0]",
   "mdcCal1_t2mt1[1][0]",
   "mdcCal1_t2mt1[2][0]",
   "mdcCal1_t2mt1[3][0]",
   "mdcCal1_t2mt1[4][0]",
   "mdcCal1_t2mt1[5][0]",
   "mdcCal1_t2mt1[0][1]",
   "mdcCal1_t2mt1[1][1]",
   "mdcCal1_t2mt1[2][1]",
   "mdcCal1_t2mt1[3][1]",
   "mdcCal1_t2mt1[4][1]",
   "mdcCal1_t2mt1[5][1]",
   "mdcCal1_t2mt1[0][2]",
   "mdcCal1_t2mt1[1][2]",
   "mdcCal1_t2mt1[2][2]",
   "mdcCal1_t2mt1[3][2]",
   "mdcCal1_t2mt1[4][2]",
   "mdcCal1_t2mt1[5][2]",
   "mdcCal1_t2mt1[0][3]",
   "mdcCal1_t2mt1[1][3]",
   "mdcCal1_t2mt1[2][3]",
   "mdcCal1_t2mt1[3][3]",
   "mdcCal1_t2mt1[4][3]",
   "mdcCal1_t2mt1[5][3]",
   "mdcCal1_t1[0][0]",
   "mdcCal1_t1[1][0]",
   "mdcCal1_t1[2][0]",
   "mdcCal1_t1[3][0]",
   "mdcCal1_t1[4][0]",
   "mdcCal1_t1[5][0]",
   "mdcCal1_t1[0][1]",
   "mdcCal1_t1[1][1]",
   "mdcCal1_t1[2][1]",
   "mdcCal1_t1[3][1]",
   "mdcCal1_t1[4][1]",
   "mdcCal1_t1[5][1]",
   "mdcCal1_t1[0][2]",
   "mdcCal1_t1[1][2]",
   "mdcCal1_t1[2][2]",
   "mdcCal1_t1[3][2]",
   "mdcCal1_t1[4][2]",
   "mdcCal1_t1[5][2]",
   "mdcCal1_t1[0][3]",
   "mdcCal1_t1[1][3]",
   "mdcCal1_t1[2][3]",
   "mdcCal1_t1[3][3]",
   "mdcCal1_t1[4][3]",
   "mdcCal1_t1[5][3]",
   //"mdcCal1_t2mt1_vs_t1_plane[0]",
   //"mdcCal1_t2mt1_vs_t1_plane[1]",
   //"mdcCal1_t2mt1_vs_t1_plane[2]",
   //"mdcCal1_t2mt1_vs_t1_plane[3]",
   "mdcCutCounts[0]",
   "mdcCutCounts[1]",
   "mdcCutCounts[2]",
   "mdcCutCounts[3]",
   //"mdcCutCounts[4]",
   "mdcCutCounts[5]",
   "mdcCutCounts[6]",
   "mdcCal1_tat_m0",
   "mdcCal1_tat_m1",
   "mdcCal1_tat_m2",
   "mdcCal1_tat_m3",
   "mdcHit_scat_m0",
   "mdcHit_scat_m1",
   "mdcHit_scat_m2",
   "mdcHit_scat_m3",

  // Active Tof histograms
   "tofHit_scat",
   "tofHit_phi",
   "tofHit_theta",
   "tofHit_tof",
   "tofHit_n",

  // Active Tofino histograms
   "tfnCal_n",
   "tfnCal_tdc",
   "histProfTofino",  
   "histMultTofinoM",
   "histTofinoTof",

  // Active Shower histograms
   "shoHit_scat",
   "shoHit_phi",
   "shoHit_theta",
   //"shoHit_chargeVsSector_m0",
   //"shoHit_chargeVsSector_m1",
   "shoHit_nRow",
   "shoHit_nCol",
   //"shoHit_chargeVsSector_m2",
   //"shoHit_rowVsSector_m0",
   //"shoHit_rowVsSector_m1",
   //"shoHit_rowVsSector_m2",
   //"shoHit_colVsSector_m0",
   //"shoHit_colVsSector_m1",
   //"shoHit_colVsSector_m2",
   "showersums_0_0",
   "showersums_0_1",
   "showersums_0_2",
   "showersums_1_0",
   "showersums_1_1",
   "showersums_1_2",
   "showersums_2_0",
   "showersums_2_1",
   "showersums_2_2",
   "showersums_3_0",
   "showersums_3_1",
   "showersums_3_2",
   "showersums_4_0",
   "showersums_4_1",
   "showersums_4_2",
   "showersums_5_0",
   "showersums_5_1",
   "showersums_5_2",
   //"shoHit_nSec",
   "shoHit_sectorVsModule",
   "shoHitTof_scat",
   //"shoHitTof_nSec",

  // Active Forward Wall histograms
   "hWallCellSmall" ,
   "hWallCellMedium",
   "hWallCellLarge" ,
   "hMultWall"      ,
   "hWallCellTime"  ,
   "hWallCellAdc"   ,
   "hWallXY"        ,
   "hWallHitNumI"   ,
   "hWallHitNumII"  ,
   "hWallHitNumIII" ,
   "hWallHitNumIV"  ,


  // Active Tracking (Kick,Spline) histograms
  "kickTrack_scat",
  "kickTrack_pullVsSector",
  //"kickTrack_massCharge",
  "kickTrack123_scat",
  //"kickTrack123_massCharge",
  "splineTrack_scat",
  "rungeKuttaTrack_scat",
  //"splineTrack_massCharge",
  //"rungeKuttaTrack_massCharge",
  "trackingKick12M_sys0[0]",
  "trackingKick12M_sys0[1]",
  "trackingKick12M_sys0[2]",
  "trackingKick12M_sys0[3]",
  "trackingKick12M_sys0[4]",
  "trackingKick12M_sys0[5]",
  "trackingKick123_sys0[0]",
  "trackingKick123_sys0[1]",
  "trackingKick123_sys0[2]",
  "trackingKick123_sys0[3]",
  "trackingKick123_sys0[4]",
  "trackingKick123_sys0[5]",
  "trackingSpline_sys0[0]",
  "trackingSpline_sys0[1]",
  "trackingSpline_sys0[2]",
  "trackingSpline_sys0[3]",
  "trackingSpline_sys0[4]",
  "trackingSpline_sys0[5]",
  "trackingRK_sys0[0]",
  "trackingRK_sys0[1]",
  "trackingRK_sys0[2]",
  "trackingRK_sys0[3]",
  "trackingRK_sys0[4]",
  "trackingRK_sys0[5]",
  "trackingKick12M_sys1[0]",
  "trackingKick12M_sys1[1]",
  "trackingKick12M_sys1[2]",
  "trackingKick12M_sys1[3]",
  "trackingKick12M_sys1[4]",
  "trackingKick12M_sys1[5]",
  "trackingKick123_sys1[0]",
  "trackingKick123_sys1[1]",
  "trackingKick123_sys1[2]",
  "trackingKick123_sys1[3]",
  "trackingKick123_sys1[4]",
  "trackingKick123_sys1[5]",
  "trackingSpline_sys1[0]",
  "trackingSpline_sys1[1]",
  "trackingSpline_sys1[2]",
  "trackingSpline_sys1[3]",
  "trackingSpline_sys1[4]",
  "trackingSpline_sys1[5]",
  "trackingRK_sys1[0]",
  "trackingRK_sys1[1]",
  "trackingRK_sys1[2]",
  "trackingRK_sys1[3]",
  "trackingRK_sys1[4]",
  "trackingRK_sys1[5]",

  // Active MetaMatch histograms
  "hseckick",
  "hsecspline",
  "hseckick0",
  "hsecspline0",
  "hseckick1",
  "hsecspline1",

  "hXdiffvsshowersector",
  "hYdiffvsshowersector",
  "hXdiffvsshw",
  "hYdiffvsshw",
  "hshower_quality",
  "htof_quality",
  "hXdiffvstofstrip",
  "hYdiffvstofstrip",
  "hXdiffvsshoCol",
  "hXdiffvsshoRow",
  "hYdiffvsshoCol",
  "hYdiffvsshoRow",

  // Active Corr histograms

  //  Active Trigger histograms
  "trigRich_nhits",        
  //"trigRich_nSec",         
  "trigRich_theta",        
  "trigRich_phi",          
  "trigRich_rowVsCol",     
  
  "trigTof_nhits",         
  //"trigTof_nSec",          
  "trigTof_theta",         
  "trigTof_phi",           
  "trigTof_time",          
  //"trigTof_xVsy",          
			
  "trigShower_nhits",       
  //"trigShower_nSec",       
  "trigShower_theta",      
  "trigShower_phi",        
  "trigShower_rowVsCol",   
  
  "trigMULep_nhits",       
  //"trigMULep_TnSec",       
  //"trigMULep_SnSec",       
  "trigMULep_momVsDTh",    
  "trigMULep_phiVsDPh",    

  //  Active Rich-MDC histograms

  "richmdc_dtheta_sec0",
  "richmdc_dtheta_sec1",
  "richmdc_dtheta_sec2",
  "richmdc_dtheta_sec3",
  "richmdc_dtheta_sec4",
  "richmdc_dtheta_sec5",
  
  "richmdc_dphi_sec0",
  "richmdc_dphi_sec1",
  "richmdc_dphi_sec2",
  "richmdc_dphi_sec3",
  "richmdc_dphi_sec4",
  "richmdc_dphi_sec5",

  "richmdc_lep",

  //  Active Rich-Kick histograms

  "richkick_dtheta_sec0",
  "richkick_dtheta_sec1",
  "richkick_dtheta_sec2",
  "richkick_dtheta_sec3",
  "richkick_dtheta_sec4",
  "richkick_dtheta_sec5",
  
  "richkick_dphi_sec0",
  "richkick_dphi_sec1",
  "richkick_dphi_sec2",
  "richkick_dphi_sec3",
  "richkick_dphi_sec4",
  "richkick_dphi_sec5",

  "richkick_tof_sys0_sec0",
  "richkick_tof_sys0_sec1",
  "richkick_tof_sys0_sec2",
  "richkick_tof_sys0_sec3",
  "richkick_tof_sys0_sec4",
  "richkick_tof_sys0_sec5",

  "richkick_tof_sys1_sec0",
  "richkick_tof_sys1_sec1",
  "richkick_tof_sys1_sec2",
  "richkick_tof_sys1_sec3",
  "richkick_tof_sys1_sec4",
  "richkick_tof_sys1_sec5",

  "richkick_lep",
  "richkick_ele",
  "richkick_pos",
  "richkick_lep_sys0",
  "richkick_lep_sys1",

  "richkick_tof_vs_rod_sys0",
  "richkick_tof_vs_rod_sys1",
  "richkick_tof_vs_startstripe",


  // Active PID histograms
  //multiplicity
  "hNTrackCandPerSecKick",
  "hNTrackCandPerSecRK",
  "hNTrackCandLepPerSecKick",
  "hNTrackCandLepPerSecRK",

  "hpidtrk_multrk",
  "hpidtrk_multkick",
  // lepton times
  "hpidtrk_richrk_tof_vs_rod_sys0",
  "hpidtrk_richrk_tof_vs_rod_sys1",
  "hpidtrk_richrk_tof_vs_startstrip",

  "hpidtrk_richkick_tof_vs_rod_sys0",
  "hpidtrk_richkick_tof_vs_rod_sys1",
  "hpidtrk_richkick_tof_vs_startstrip",

  // theta
  "hpidtrk_KICK_theta_sec0",
  "hpidtrk_KICK_theta_sec1",
  "hpidtrk_KICK_theta_sec2",
  "hpidtrk_KICK_theta_sec3",
  "hpidtrk_KICK_theta_sec4",
  "hpidtrk_KICK_theta_sec5",
 
  "hpidtrk_SPLINE_theta_sec0",
  "hpidtrk_SPLINE_theta_sec1",
  "hpidtrk_SPLINE_theta_sec2",
  "hpidtrk_SPLINE_theta_sec3",
  "hpidtrk_SPLINE_theta_sec4",
  "hpidtrk_SPLINE_theta_sec5",

  "hpidtrk_RK_theta_sec0",
  "hpidtrk_RK_theta_sec1",
  "hpidtrk_RK_theta_sec2",
  "hpidtrk_RK_theta_sec3",
  "hpidtrk_RK_theta_sec4",
  "hpidtrk_RK_theta_sec5",

  "hpidtrk_KICK_neg_theta_sec0", 
  "hpidtrk_KICK_neg_theta_sec1", 
  "hpidtrk_KICK_neg_theta_sec2", 
  "hpidtrk_KICK_neg_theta_sec3", 
  "hpidtrk_KICK_neg_theta_sec4", 
  "hpidtrk_KICK_neg_theta_sec5", 

  "hpidtrk_SPLINE_neg_theta_sec0", 
  "hpidtrk_SPLINE_neg_theta_sec1", 
  "hpidtrk_SPLINE_neg_theta_sec2", 
  "hpidtrk_SPLINE_neg_theta_sec3", 
  "hpidtrk_SPLINE_neg_theta_sec4", 
  "hpidtrk_SPLINE_neg_theta_sec5", 

  "hpidtrk_RK_neg_theta_sec0",
  "hpidtrk_RK_neg_theta_sec1",
  "hpidtrk_RK_neg_theta_sec2",
  "hpidtrk_RK_neg_theta_sec3",
  "hpidtrk_RK_neg_theta_sec4",
  "hpidtrk_RK_neg_theta_sec5",
  // phi
  "hpidtrk_KICK_phi",
  "hpidtrk_SPLINE_phi",
  "hpidtrk_RK_phi",
  "hpidtrk_KICK_neg_phi",
  "hpidtrk_SPLINE_neg_phi",
  "hpidtrk_RK_neg_phi",

   //proton momentum calculated from velocity vs reconstructed momentum
  "hpidtrk_kick_proton_momdif_sys0_sec0",
  "hpidtrk_kick_proton_momdif_sys0_sec1",
  "hpidtrk_kick_proton_momdif_sys0_sec2",
  "hpidtrk_kick_proton_momdif_sys0_sec3",
  "hpidtrk_kick_proton_momdif_sys0_sec4",
  "hpidtrk_kick_proton_momdif_sys0_sec5",
 
  "hpidtrk_kick_proton_momdif_sys1_sec0", 
  "hpidtrk_kick_proton_momdif_sys1_sec1", 
  "hpidtrk_kick_proton_momdif_sys1_sec2", 
  "hpidtrk_kick_proton_momdif_sys1_sec3", 
  "hpidtrk_kick_proton_momdif_sys1_sec4", 
  "hpidtrk_kick_proton_momdif_sys1_sec5", 

  "hpidtrk_rk_proton_momdif_sys0_sec0", 
  "hpidtrk_rk_proton_momdif_sys0_sec1",
  "hpidtrk_rk_proton_momdif_sys0_sec2", 
  "hpidtrk_rk_proton_momdif_sys0_sec3", 
  "hpidtrk_rk_proton_momdif_sys0_sec4", 
  "hpidtrk_rk_proton_momdif_sys0_sec5", 

  "hpidtrk_rk_proton_momdif_sys1_sec0",   
  "hpidtrk_rk_proton_momdif_sys1_sec1",   
  "hpidtrk_rk_proton_momdif_sys1_sec2",   
  "hpidtrk_rk_proton_momdif_sys1_sec3",   
  "hpidtrk_rk_proton_momdif_sys1_sec4",   
  "hpidtrk_rk_proton_momdif_sys1_sec5"   

 
